@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");*{box-sizing:border-box;margin:0;padding:0}html{font-size:100%;height:100%;scroll-behavior:smooth;width:100vw}body{background-color:#f7f7f8;color:#818c97;font-family:Roboto,san-serif;font-size:16px;min-height:inherit;overflow-x:hidden;width:inherit}img{height:auto}h1{font-size:3rem}@media screen and (min-width:48em){h1{font-size:3.5rem}}h2{font-size:2.5rem}@media screen and (min-width:48em){h2{font-size:2.8rem}}h3{font-size:1.7rem}@media screen and (min-width:48em){h3{font-size:2rem}}h4{font-size:clamp(1.4rem,1.4vw,1.6rem)}p{font-size:clamp(1rem,1vw,1.5rem)}ul{list-style:none}a{text-decoration:none}img{display:block;max-height:100%;max-width:100%}button{border:none;cursor:pointer;outline:none}.container{margin-left:1.5rem;margin-right:1.5rem;max-width:64rem}@media screen and (min-width:64em){.container{margin-left:auto;margin-right:auto}}.grid{display:grid;gap:1.5rem}.section{padding:4rem 0 2rem}@media screen and (min-width:48em){.section{padding:7rem 0 2rem}}.section__title{margin-bottom:2.5rem;padding-left:1.25rem;position:relative}.section__title:before{background-color:#faa422;content:"";height:2rem;left:0;position:absolute;top:.5rem;width:3px}.button{background:linear-gradient(90deg,#243b55,#141e30);border-radius:.25rem;box-shadow:0 6px 12px -2px rgba(50,50,93,.25),0 3px 7px -3px rgba(0,0,0,.3);color:#fff;display:inline-box;font-size:1rem;padding:1rem 1.75rem;position:relative;text-transform:uppercase}.button:before{background-color:hsla(0,0%,100%,.1);content:"";height:100%;left:0;position:absolute;top:0;transition:all .3s;width:100%;z-index:1}.button:hover:before{opacity:0;transform:scale(.5)}.button:after{border:1px solid hsla(0,0%,100%,.5);content:"";height:100%;left:0;opacity:0;position:absolute;top:0;transform:scale(1.2);transition:all .3s;width:100%;z-index:1}.button:hover:after{opacity:1;transform:scale(1)}.header{background-color:transparent;left:0;position:fixed;top:0;width:100%;z-index:100}.header .nav{align-items:center;display:flex;height:4rem;justify-content:space-between}@media screen and (min-width:48em){.header .nav{height:4.5rem}}.header .nav .nav__logo{align-items:center;color:#fff;-moz-column-gap:.5rem;column-gap:.5rem;display:flex;font-weight:700;text-transform:capitalize}@media screen and (min-width:62em){.header .nav .nav__logo{font-size:1.5rem}}.header .nav .menu__btn{cursor:pointer;display:inline-flex}@media screen and (min-width:48em){.header .nav .menu__btn,.header .nav__close{display:none}}.header .nav .menu__btn .menu__icon-black{display:none}@media screen and (max-width:47.9em){.header .nav .nav__menu{background:#141e30;background:linear-gradient(90deg,#243b55,#141e30);height:100%;position:fixed;right:-100%;top:0;transition:.5s;width:100%}}.header .nav .nav__menu.show-menu{right:0}.header .nav .nav__menu .nav__list{display:flex;flex-direction:column;padding-top:9rem;row-gap:4rem;text-align:center}@media screen and (min-width:48em){.header .nav .nav__menu .nav__list{-moz-column-gap:4rem;column-gap:4rem;flex-direction:row;padding-top:0}}.header .nav .nav__menu .nav__list .nav__item .nav__link{color:#dee0e0;font-size:1.5rem;font-weight:700;letter-spacing:2px;text-transform:uppercase;z-index:10}@media screen and (min-width:48em){.header .nav .nav__menu .nav__list .nav__item .nav__link{font-size:1.2rem;letter-spacing:normal;position:relative}}.header .nav .nav__menu .nav__list .nav__item .nav__link .active-link,.header .nav .nav__menu .nav__list .nav__item .nav__link:active{color:#faa422}.header .nav .nav__menu .nav__close{cursor:pointer;position:absolute;right:1.5rem;top:1.5rem}.header.scroll-header{background-color:#f7f7f8;box-shadow:0 1px 4px rgba(40,37,37,.102)}.header.scroll-header .nav__logo{color:#243b55}.header.scroll-header .menu__btn .menu__icon{display:none}.header.scroll-header .menu__btn .menu__icon-black{display:block}.header.scroll-header .nav__menu .nav__list .nav__item .nav__link .active-link{color:#faa422}@media screen and (min-width:48em){.header.scroll-header .nav__menu .nav__list .nav__item .nav__link{color:#243b55!important}}.banner{gap:0}@media screen and (min-width:48em){.banner{align-items:stretch;grid-template-columns:repeat(2,1fr);position:relative;width:100%}}.banner__container{background:#141e30;background:linear-gradient(90deg,#243b55,#141e30);padding:5rem 0 2.5rem}@media screen and (min-width:75rem){.banner__container{padding-top:10rem}}.banner .banner__content{position:relative}@media screen and (min-width:48em){.banner .banner__content{position:static}}@media screen and (min-width:64em){.banner .banner__content{margin-left:auto;margin-right:7rem;max-width:25rem}}.banner .banner__content .banner__data-title,.banner .banner__content .banner__title{color:#fff}.banner .banner__content .banner__title{margin-bottom:1.5rem;text-transform:capitalize}.banner .banner__content .banner__title span{color:#faa422}@media screen and (min-width:75rem){.banner .banner__content .banner__title{bottom:2rem;line-height:150%}}.banner .banner__content .banner__description{margin-bottom:1rem}@media screen and (min-width:75rem){.banner .banner__content .banner__description{margin-bottom:3rem}}.banner .banner__content .banner__data{border-top:1px solid #818c97;-moz-column-gap:1.5rem;column-gap:1.5rem;display:grid;grid-template-columns:repeat(2,1fr);padding-top:1rem}@media screen and (min-width:75rem){.banner .banner__content .banner__data{padding-top:3rem}}.banner .banner__content .banner__data-number{color:#faa422;margin-bottom:1rem}.banner .banner__content .banner__data-title{margin-bottom:.5rem;text-transform:capitalize}.banner .banner__content .banner__data-description{line-height:120%}@media screen and (min-width:48em){.banner .banner__content .banner__data-description{line-height:160%}}.banner .banner__content .banner__scroll{bottom:-7rem;left:0;margin:0 auto;position:absolute;right:0;width:6.25rem}@media screen and (min-width:48em){.banner .banner__content .banner__scroll{bottom:0;margin:auto;top:0}}@media screen and (min-width:75rem){.banner .banner__content .banner__scroll{width:8.125rem}}.banner .banner__img{-o-object-fit:cover;object-fit:cover}@media screen and (min-width:62em){.speciality__container .speciality__box{align-items:baseline;display:grid;grid-template-columns:2fr .5fr}}.speciality__container .speciality__category{display:grid;grid-template-columns:12.5rem;justify-content:center;margin-top:4rem;row-gap:2.5rem}@media screen and (min-width:36em){.speciality__container .speciality__category{-moz-column-gap:3rem;column-gap:3rem;grid-template-columns:repeat(2,1fr)}}@media screen and (min-width:62em){.speciality__container .speciality__category{align-items:center;-moz-column-gap:8rem;column-gap:8rem;grid-template-columns:repeat(3,15.625rem)}}.speciality__container .speciality__category .speciality__group{align-items:center;display:flex;flex-direction:column;text-align:center}@media screen and (min-width:62em){.speciality__container .speciality__category .speciality__group{align-items:flex-start;text-align:initial}}.speciality__container .speciality__category .speciality__group:hover .speciality__img{transform:translateY(-.25rem)}.speciality__container .speciality__category .speciality__group .speciality__img{margin-bottom:1rem;transition:.4s;width:3.75rem}@media screen and (min-width:62em){.speciality__container .speciality__category .speciality__group .speciality__img{margin-bottom:1.5rem;width:4rem}}.speciality__container .speciality__category .speciality__group .speciality__title{margin-bottom:.25rem;text-transform:capitalize}@media screen and (min-width:62em){.speciality__container .speciality__category .speciality__line{position:relative}.speciality__container .speciality__category .speciality__line:before{background-color:#dee0e0;bottom:0;content:"";height:120px;margin:0 auto;position:absolute;right:-5rem;top:0;width:1px}}.products__filters{display:grid;grid-template-columns:repeat(3,1fr);justify-items:center;margin-bottom:3.5rem}@media screen and (min-width:64em){.products__filters{margin:4rem 0 5.5rem}}.products__filters .products__item{cursor:pointer}.products__filters .products__item.active-link .products__title{background:#fff;color:#faa422;font-weight:700;text-decoration:underline;-webkit-text-decoration-color:#faa422;text-decoration-color:#faa422}.products__filters .products__item .products__title{color:#818c97;margin-bottom:.5rem}@media screen and (min-width:48em){.products__filters .products__line{position:relative}.products__filters .products__line:after{background-color:#dee0e0;bottom:0;content:"";height:3rem;left:10rem;margin:auto 0;position:absolute;top:0;width:2px}}.products__content{display:none;grid-template-columns:12.5rem;justify-content:center}@media screen and (min-width:36em){.products__content{padding-bottom:3rem}}.products__content.active-content{display:block}.products__content .products__wrapper{-webkit-animation:content .2s linear .2s backwards;animation:content .2s linear .2s backwards;display:grid;grid-template-columns:12.5rem;justify-content:center;row-gap:2rem}@media screen and (min-width:48em){.products__content .products__wrapper{align-items:center;-moz-column-gap:3rem;column-gap:3rem;grid-template-columns:repeat(3,1fr);justify-content:normal}}.products__content .products__wrapper .products__card{background-color:#fff;border-radius:.5rem;box-shadow:0 6px 12px -2px rgba(50,50,93,.25),0 3px 7px -3px rgba(0,0,0,.3)}@media screen and (min-width:48em){.products__content .products__wrapper .products__card:hover .products__img{transform:translate(.25rem,-.25rem)}}@media screen and (min-width:64em){.products__content .products__wrapper .products__card{border-radius:.75rem}}.products__content .products__wrapper .products__card .products__shape{background-color:#e6e6e6;border-radius:.5rem .5rem 0 0;padding:.25rem 0;text-align:center}@media screen and (min-width:64em){.products__content .products__wrapper .products__card .products__shape{border-radius:.75rem;padding:2rem 0}}.products__content .products__wrapper .products__card .products__shape .products__img{filter:drop-shadow(0 12px 8px rgba(0,0,0,.2));max-height:7rem;max-width:9rem;transition:.3s}@media screen and (min-width:64em){.products__content .products__wrapper .products__card .products__shape .products__img{margin-left:1rem;width:12.5rem}}.products__content .products__wrapper .products__card .products__data{display:flex;flex-direction:column;padding:1rem 0 1rem 1rem;position:relative}@media screen and (min-width:64em){.products__content .products__wrapper .products__card .products__data{padding:1rem 0 1.5rem 1.5rem}}.products__content .products__wrapper .products__card .products__data .products__name,.products__content .products__wrapper .products__card .products__data .products__price{font-size:1rem;font-weight:700;line-height:150%;text-transform:capitalize}@media screen and (min-width:48em){.products__content .products__wrapper .products__card .products__data .products__name,.products__content .products__wrapper .products__card .products__data .products__price{font-size:1.3rem}}.products__content .products__wrapper .products__card .products__data .products__button{border-radius:.5rem;box-shadow:0 4px 12px rgba(34,36,37,.2);padding:.625rem;position:absolute;right:1rem;top:-1.4rem}@-webkit-keyframes content{0%{opacity:0;transform:translateX(-50%)}}@keyframes content{0%{opacity:0;transform:translateX(-50%)}}.quality{background-color:#fff}.quality .quality__content{row-gap:2.5rem}@media screen and (min-width:48em){.quality .quality__content{align-items:center;grid-template-columns:repeat(2,1fr)}}@media screen and (min-width:64em){.quality .quality__content{-moz-column-gap:6rem;column-gap:6rem}}.quality .quality__content .quality__images{justify-self:center;position:relative}@media screen and (min-width:64em){.quality .quality__content .quality__images{margin-top:2rem}}.quality .quality__content .quality__images .quality__img-big,.quality .quality__content .quality__images .quality__img-small{border-radius:.5rem;filter:drop-shadow(0 12px 8px rgba(0,0,0,.2))}.quality .quality__content .quality__images .quality__img-big{width:17.5rem}@media screen and (min-width:64em){.quality .quality__content .quality__images .quality__img-big{width:26.75rem}}.quality .quality__content .quality__images .quality__img-small{border:1px solid #dee0e0;bottom:0;margin:auto;position:absolute;right:0;top:0;transform:translate(1.5rem,4rem);width:6.25rem}@media screen and (min-width:64em){.quality .quality__content .quality__images .quality__img-small{transform:translate(2rem,6rem);width:9.56rem}}.quality .quality__data .quality__price,.quality .quality__data .quality__title{text-transform:capitalize}.quality .quality__data .quality__title{margin-bottom:.75rem}@media screen and (min-width:64em){.quality .quality__data .quality__title{margin-bottom:1.5rem}}.quality .quality__data .quality__price{margin-bottom:.25rem}.quality .quality__data .quality__special{display:block;line-height:140%;margin-bottom:.75rem;text-transform:capitalize}@media screen and (min-width:64em){.quality .quality__data .quality__special{margin-bottom:1rem}}.quality .quality__data .quality__description{line-height:160%;margin-bottom:2.5rem;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}@media screen and (min-width:62em){.quality .quality__data .quality__description{line-height:180%}}.quality .quality__buttons{align-items:center;-moz-column-gap:2rem;column-gap:2rem;display:flex}@media screen and (max-width:20em){.quality .quality__buttons{flex-direction:column;row-gap:1rem}}.quality .quality__buttons .quality__button{align-items:center;color:#818c97;-moz-column-gap:.25rem;column-gap:.25rem;display:inline-flex;font-size:1rem;text-transform:uppercase}.quality .quality__buttons .quality__button:hover img{transform:translateX(.5rem);transition:.4s}.logos{background-color:#fff}.logos__container{align-items:center;border-top:1px solid #dee0e0;gap:2.5rem;grid-template-columns:repeat(auto-fit,minmax(7rem,1fr));justify-items:center;padding-top:2.5rem}.logos__container img:last-child{justify-self:center}.logos__container .logo__img{mix-blend-mode:luminosity;opacity:.4;transition:.4s;width:7rem}@media screen and (min-width:64em){.logos__container .logo__img{width:6.875rem}}.logos__container .logo__img:hover{opacity:.8;transform:scale(1.1)}.testimonials{position:relative}@media screen and (min-width:62em){.testimonials{padding-bottom:5rem}}.testimonials__container{padding-bottom:2rem}.testimonials__container .testimonials__content{align-items:center;gap:2.5rem;justify-content:center;padding-bottom:2rem;position:relative}@media screen and (min-width:48em){.testimonials__container .testimonials__content{padding-bottom:4rem}}.testimonials__container .testimonials__content .slide__container{display:none;padding-bottom:2rem}.testimonials__container .testimonials__content .slide__container.active-slide{display:block}.testimonials__container .testimonials__content .slide__container .slide{-webkit-animation:slideRotate .4s linear;animation:slideRotate .4s linear;background-color:#fff;border-radius:.5rem;box-shadow:0 6px 12px -2px rgba(50,50,93,.25),0 3px 7px -3px rgba(0,0,0,.3);max-height:20rem;max-width:30rem;padding:2rem 9%;position:relative;transform-style:preserve-3d}.testimonials__container .testimonials__content .slide__container .slide>*{-webkit-animation:slideScale .2s linear .4s backwards;animation:slideScale .2s linear .4s backwards}@-webkit-keyframes slideScale{0%{opacity:0;transform:scale(.5)}}@keyframes slideScale{0%{opacity:0;transform:scale(.5)}}.testimonials__container .testimonials__content .slide__container .slide .slide__quote{position:absolute;right:10%;top:50%;z-index:10}.testimonials__container .testimonials__content .slide__container .slide .user{align-items:flex-start;-moz-column-gap:.3rem;column-gap:.3rem;display:flex;padding-top:1rem}.testimonials__container .testimonials__content .slide__container .slide .user .user__img{height:6.25rem;margin:0 1rem 1rem 0;-o-object-fit:cover;object-fit:cover;width:6.25rem}.testimonials__container .testimonials__content .slide__container .slide .user .user__info h4{color:#818c97;margin-bottom:.5rem;text-transform:capitalize}.testimonials__container .testimonials__content .slide__container .slide .user .user__info .user__stars{align-items:center;-moz-column-gap:.1rem;column-gap:.1rem;display:flex}.testimonials__container .testimonials__content .slide__container .slide .user__description{color:#818c97;font-size:.875rem;font-style:italic;line-height:150%;padding:.5rem 0;width:90%}@media screen and (min-width:36em){.testimonials__container .testimonials__content .slide__container .slide .user__description{font-size:1rem;line-height:170%}}@-webkit-keyframes slideRotate{0%{transform:rotateX(180deg)}}@keyframes slideRotate{0%{transform:rotateX(180deg)}}.testimonials .next__slide,.testimonials .prev__slide{background:transparent;border-radius:50%;bottom:10%;cursor:pointer;height:3.125rem;position:absolute;width:3.125rem}@media screen and (min-width:62em){.testimonials .next__slide,.testimonials .prev__slide{top:45%}}.testimonials .prev__slide{left:30%}@media screen and (min-width:62em){.testimonials .prev__slide{left:15%}}.testimonials .next__slide{right:30%}@media screen and (min-width:62em){.testimonials .next__slide{right:15%}}.blog{background-color:#fff}.blog__container{padding-bottom:2rem}@media screen and (min-width:64em){.blog__container{padding-bottom:5rem}}.blog__container .blog__content{justify-items:center;row-gap:3rem}@media screen and (min-width:36em){.blog__container .blog__content{-moz-column-gap:3rem;column-gap:3rem;grid-template-columns:repeat(auto-fit,minmax(18rem,1fr))}}@media screen and (min-width:62em){.blog__container .blog__content{padding-top:2rem}}.blog__container .blog__content .blog__card{max-height:30rem;max-width:22rem;overflow:hidden}.blog__container .blog__content .blog__card .blog__image{margin-bottom:1.5rem;position:relative}.blog__container .blog__content .blog__card .blog__image .blog__img{border-radius:.5rem;filter:drop-shadow(0 12px 8px rgba(0,0,0,.2))}.blog__container .blog__content .blog__card .blog__image .blog__button{background-color:#243b55;border-radius:.5rem 0 .5rem 0;bottom:0;display:inline-flex;padding:.5rem;position:absolute;right:0}.blog__container .blog__content .blog__card .blog__image .blog__button img{transform:rotate(-30deg);transition:.4s}.blog__container .blog__content .blog__card .blog__image .blog__button:hover img{transform:rotate(-30deg) translate(.25rem)}.blog__container .blog__content .blog__card .blog__data .blog__title{margin-bottom:1.5rem;text-transform:capitalize}.blog__container .blog__content .blog__card .blog__data .blog__description{line-height:140%;margin-bottom:1.5rem}.blog__container .blog__content .blog__card .blog__data .blog__footer,.blog__container .blog__content .blog__card .blog__data .blog__reaction{align-items:center;display:flex}.blog__container .blog__content .blog__card .blog__data .blog__footer{-moz-column-gap:1.5rem;column-gap:1.5rem}.blog__container .blog__content .blog__card .blog__data .blog__reaction{-moz-column-gap:.25rem;column-gap:.25rem}.footer{background:#141e30;background:linear-gradient(270deg,#243b55,#141e30);padding:4rem 0 2.5rem}.footer .footer__title{color:#fff;margin-bottom:2rem;text-transform:capitalize}.footer .footer__content{border-bottom:1px solid #dee0e0;padding-bottom:2.5rem;row-gap:2rem}@media screen and (min-width:48em){.footer .footer__content{align-items:center;grid-template-columns:repeat(2,1fr)}}@media screen and (min-width:64em){.footer .footer__content{-moz-column-gap:4rem;column-gap:4rem;grid-template-columns:repeat(4,1fr)}}.footer .footer__content .footer__data .footer__description{margin-bottom:.74rem;text-transform:capitalize}.footer .footer__content .footer__data .footer__newsletter{-moz-column-gap:.5rem;column-gap:.5rem;display:flex}@media screen and (min-width:36em){.footer .footer__content .footer__data .footer__newsletter{width:21.875rem}}.footer .footer__content .footer__data .footer__newsletter .footer__input{border:none;border-radius:.25rem;color:#818c97;outline:none;padding:1.25rem 1rem;width:70%}.footer .footer__content .footer__data .footer__newsletter .footer__button{align-items:center;background-color:#faa422;border-radius:.25rem;display:inline-flex;font-size:2rem;padding:.75rem}.footer .footer__content .footer__data .footer__newsletter .footer__button img{transform:rotate(-30deg);transition:.4s}.footer .footer__content .footer__data .footer__newsletter .footer__button:hover img{transform:rotate(-30deg) translate(.25rem)}.footer .footer__content .footer__data .footer__subtitle{color:#fff;margin-bottom:.75rem;text-transform:capitalize}.footer .footer__content .footer__data .footer__info{line-height:150%;text-transform:capitalize}@media screen and (min-width:64em){.footer .footer__content .footer__data .footer__info{line-height:170%}}.footer .footer__group{display:flex;flex-direction:column;margin-top:1.5rem;text-align:center}@media screen and (min-width:64em){.footer .footer__group{align-items:center;flex-direction:row;justify-content:space-between;margin-top:3rem}}.footer .footer__group .footer__social{-moz-column-gap:1.5rem;column-gap:1.5rem;display:flex;justify-content:center;margin-bottom:2rem}@media screen and (min-width:64em){.footer .footer__group .footer__social{-moz-column-gap:2rem;column-gap:2rem;margin-bottom:0}}.footer .footer__group .footer__social-link{color:#fff}@media screen and (min-width:64em){.footer .footer__group .footer__social-link{font-size:1.5rem}}.footer .footer__group .footer__social-link:hover img{transform:translate(.5rem,-.5rem);transition:all .4s linear}.footer .footer__copy{font-size:.875rem}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
